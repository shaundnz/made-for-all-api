on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: environment to deploy to
        required: true
    secrets:
      AWS_ROLE_TO_ASSUME:
        required: true
      AWS_REGION:
        required: true
      DYNAMO_ENDPOINT:
        required: true
      SPOTIFY_CLIENT_ID:
        required: true
      SPOTIFY_CLIENT_SECRET:
        required: true
      SPOTIFY_MADE_FOR_ALL_USER_REFRESH_TOKEN:
        required: true
      AWS_CERTIFICATE_ARN:
        required: true

jobs:
  deploy:
    name: "Environment: ${{ inputs.environment }}"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    env:
      MADE_FOR_ALL_API_BASE_URL: ${{ vars.MADE_FOR_ALL_API_BASE_URL }}
      MADE_FOR_ALL_CLIENT_BASE_URL: ${{ vars.MADE_FOR_ALL_CLIENT_BASE_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test

      - name: Install AWS CDK
        run: npm i -g aws-cdk

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Synth stack
        run: cdk synth
        env:
          AWS_CERTIFICATE_ARN: ${{ secrets.AWS_CERTIFICATE_ARN }}

      - name: Deploy stack
        run: cdk deploy --require-approval never
        env:
          DYNAMO_ENDPOINT: ${{ secrets.DYNAMO_ENDPOINT }}
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_MADE_FOR_ALL_USER_REFRESH_TOKEN: ${{ secrets.SPOTIFY_MADE_FOR_ALL_USER_REFRESH_TOKEN }}
          AWS_CERTIFICATE_ARN: ${{ secrets.AWS_CERTIFICATE_ARN }}
